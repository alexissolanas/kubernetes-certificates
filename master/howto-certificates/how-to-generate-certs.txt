# openssl genrsa -out ca.key 2048
# openssl req -x509 -new -nodes -key ca.key -subj "/CN=atomic0" -days 10000 -out ca.crt -config atomic0.cfg 
# openssl genrsa -out atomic0.key 2048
# openssl req -new -key atomic0.key -subj "/CN=atomic0" -out atomic0.csr
# openssl x509 -req -in atomic0.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out atomic0.crt -days 10000 -extensions v3_req -extfile atomic0.cfg 

And with now we can see that the certificate has all the information: 
  
# openssl x509 -noout -text -in atomic0.crt 
  [...]
  X509v3 Subject Alternative Name: 
  DNS:kubernetes, DNS:kubernetes.default, DNS:kubernetes.default.svc, DNS:kubernetes.default.svc.cluster.local, DNS:atomic0, IP Address:192.168.122.170

# openssl genrsa -out atomic1.key 2048
# openssl req -new -key atomic1.key -subj "/CN=atomic1" -out atomic1.csr
# openssl x509 -req -in atomic1.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out atomic1.crt -days 10000 -extensions v3_req -extfile atomic1.cfg 


# openssl genrsa -out admin-user.key 2048
# openssl req -new -key admin-user.key -subj "/CN=admin-user" -out admin-user.csr
# openssl x509 -req -in admin-user.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out admin-user.crt -days 10000



# kubectl config set-cluster secure  --certificate-authority=/etc/kubernetes/certs/ca.crt  --server=https://atomic0:6443 	--embed-certs=false 
# kubectl config set-credentials admin-user  --client-key=/etc/kubernetes/certs/admin-user.key --client-certificate=/etc/kubernetes/certs/admin-user.crt  --embed-certs=false
# kubectl config set-context secure  --cluster=secure  --user=admin-user 
# kubectl config use-context secure

 # kubectl cluster-info





